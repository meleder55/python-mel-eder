import os
import getpass

# ANSI escape codes for colors
RED = "\033[91m"
GREEN = "\033[92m"
YELLOW = "\033[93m"
BLUE = "\033[94m"
MAGENTA = "\033[95m"
CYAN = "\033[96m"
RESET = "\033[0m"

# Declare global variable for quit option
choice = 'q'

# Define function menu providing options to store, retrieve or quit.  
def menu():
    global choice
    while True:
        print(CYAN + "\nMenu:" + RESET)
        print(GREEN + "1. Store user" + RESET)
        print(YELLOW + "2. Retrieve user" + RESET)
        print(MAGENTA + "3. Visualize stored credentials" + RESET)
        print(RED + "q. Quit" + RESET)
        choice = input(CYAN + "Enter your choice: " + RESET)
        if choice == '1':
            store_user()
        elif choice == '2':
            retrieve_user()
        elif choice == '3':
            visualize_credentials()
        elif choice == 'q':
            break
        else:
            print(RED + "Invalid choice. Please try again." + RESET)

# Define function called encrypt_password to encrypt passwords
def encrypt_password(clearText, charSet):
    return "".join([charSet[(charSet.find(c) + 3) % len(charSet)] for c in clearText])

# Define function called decrypt_password to decrypt passwords
def decrypt_password(encText, charSet):
    return "".join([charSet[(charSet.find(c) - 3) % len(charSet)] for c in encText])

# Function to get password with '*' masking
def get_password(prompt="Enter the password: "):
    password = getpass.getpass(prompt)
    masked_password = '*' * len(password)
    print(masked_password)
    return password

# Define function called store_user to store user credentials
def store_user():
    charSet = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz`~!@#$%^&*()_-=|\\}]{[\"':;?/>.<, "
    username = input(CYAN + "Enter your username: " + RESET)
    website = input(CYAN + "Enter the website: " + RESET)
    password = get_password()
    encrypted_password = encrypt_password(password, charSet)
    with open("credentials.txt", "a") as file:
        file.write(f"{username}\n{website}\n{encrypted_password}\n")
    print(GREEN + "Credentials stored successfully!" + RESET)

# Define function to retrieve and display password of user
def retrieve_user():
    charSet = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz`~!@#$%^&*()_-=|\\}]{[\"':;?/>.<, "
    username = input(CYAN + "Enter the username associated with the credentials: " + RESET)
    website = input(CYAN + "Enter the website: " + RESET)
    try:
        with open("credentials.txt", "r") as file:
            lines = file.readlines()
            for i in range(0, len(lines), 3):
                stored_username = lines[i].strip()
                stored_website = lines[i+1].strip()
                encrypted_password = lines[i+2].strip()
                if stored_username == username and stored_website == website:
                    decrypted_password = decrypt_password(encrypted_password, charSet)
                    border = "|"
                    print(CYAN + f"\n{border}{'Username' : ^20}{border}{'Website' : ^20}{border}{'Password' : ^20}{border}" + RESET)
                    print(CYAN + "-" * 65 + RESET)
                    print(GREEN + f"{border}{stored_username : ^20}{border}{stored_website : ^20}{border}{decrypted_password : ^20}{border}" + RESET)
                    print(CYAN + "-" * 65 + RESET)
                    return
            print(RED + "No matching credentials found." + RESET)
    except FileNotFoundError:
        print(RED + "No credentials file found." + RESET)

# Define function to visualize stored credentials
def visualize_credentials():
    try:
        with open("credentials.txt", "r") as file:
            lines = file.readlines()
            usernames = [lines[i].strip() for i in range(0, len(lines), 3)]
            websites = [lines[i+1].strip() for i in range(0, len(lines), 3)]
            
            print(CYAN + "\nStored Credentials Visualization:" + RESET)
            print(CYAN + "-" * 40 + RESET)
            for username, website in zip(usernames, websites):
                print(GREEN + f"Username: {username}, Website: {website}" + RESET)
            print(CYAN + "-" * 40 + RESET)
    except FileNotFoundError:
        print(RED + "No credentials file found." + RESET)

if __name__ == "__main__":
    menu()
